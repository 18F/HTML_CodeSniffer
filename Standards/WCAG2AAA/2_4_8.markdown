---
title: Success Criterion 2.4.8, Location
layout: default
---

# Success Criterion 2.4.8: Location

- **Applies to**: <abbr title="Triple A">AAA</abbr> only.

## Definition

Information about the user's location within a set of Web pages is available.

The full ["understanding" page for Success Criterion 2.4.8](http://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-location.html) is available from the W3C.

This only tests the usage of link elements, however the following techniques are also sufficient where appropriate:
- Providing a breadcrumb trail.
- Providing a site map.
- Indicating current location within navigation bars.

With the latter, just changing the background colour is not sufficient (see Success Criterion 1.4.1, Use of Colour): something else should change, such as disabling the link, or adding an indicator such as an asterisk or bullet.

## Techniques tested

### Table of contents

- [H59: Using the link element and navigation tools](#tech-h59)

### <a id="tech-h59">H59: Using the link element and navigation tools</a>

[Detailed information about technique H59](http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H59) is available from the W3C.

The link element includes several different relation types or roles. Beyond stylesheet and "alternate" representations (for RSS/Atom feeds, for instance), some relations are used for navigation purposes.

Appropriate lists of relation types include:
- The [XHTML vocabulary](http://www.w3.org/1999/xhtml/vocab/) which defines roles as they relate to XHTML+RDFa, for XHTML 1.1+.
- The [IANA link type registry](http://www.iana.org/assignments/link-relations/link-relations.xml) as it applies to [RFC5988: Web Linking](http://tools.ietf.org/html/rfc5988). This proposes that links would be able to be expressed as HTTP headers.
- The HTML5 specification contains a [base list of supported relation types](http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#linkTypes) - note that only "next" and "prev" are explicitly included for navigation purposes; other proposed link types in HTML5 are explicitly the responsibility of [a HTML5 link type registry maintained by the Microformats community](http://microformats.org/wiki/existing-rel-values#HTML5_link_type_extensions).

The connections exposed by the link element are generally not exposed by browsers themselves, but can usually be added on using extensions:

* Opera 11 includes a "Fast Forward" button by default using the "next" relation; there is a "Navigation Bar" toolbar which displays the other relations, but it is hidden by default, and [is likely to be removed "in due course"](http://lists.w3.org/Archives/Public/public-html/2010Nov/0385.html).
* "Old" Mozilla/Netscape used to handle it, and so does SeaMonkey now - cf. "View - Show/Hide - Website Navigation Bar".
* Firefox (and probably IE) have extensions that expose link relations in a separate toolbar.

The "next" relation is also prefetched link prefetching in Firefox (and probably SeaMonkey), as well as the explicitly specified "prefetch".

HTML5 only supports "forward" links (using the rel attribute); "reverse" links (using the rev attribute) are not supported.

As failing link elements would create invalid HTML, this test will apply to ALL link elements, not just ones specifically specified for.

#### Testing

1. Check that all link elements pertaining to navigation occur in the head section of the document.
2. For each link element in the head section of the document which pertains to navigation, check that it contains at least:
     - *a.* a rel attribute identifying the link type
     - *b.* a valid href attribute to locate the appropriate resource

#### Examples

1.  Successful usage.

    Example:

        <html>
            <head>
                <link rel="start" href="start.html" />
            </head>
            <body>
            </body>
        </html>

#### Errors

1.  Fails because: the link element is not placed underneath the head element.

    Example:

        <html>
            <head>
            </head>
            <body>
                <link rel="start" href="start.html" />
            </body>
        </html>

1.  Fails because: no rel attribute is specified.

    Example:

        <html>
            <head>
                <link href="start.html" />
            </head>
            <body>
            </body>
        </html>

1.  Fails because: a rel attribute is specified but it is empty.

    Example:

        <html>
            <head>
                <link rel="" href="start.html" />
            </head>
            <body>
            </body>
        </html>

1.  Fails because: no rel attribute is specified. Reverse links (using the rev
attribute) have seen little usage and have been obsoleted in HTML5.

    Example:

        <html>
            <head>
                <link rev="made" href="author.html" />
            </head>
            <body>
            </body>
        </html>

1.  Fails because: no href attribute is specified.

    Example:

        <html>
            <head>
                <link rel="contents" />
            </head>
            <body>
            </body>
        </html>

1.  Fails because: a href attribute is specified but it is empty.

    Example:

        <html>
            <head>
                <link rel="contents" href="" />
            </head>
            <body>
            </body>
        </html>

1.   Fails because: the link element is not placed underneath the head element.

     In HTML5 (using HTML serialisation only), this is legal, however this is not
     valid code either in HTML4, or HTML5 using XML serialisation. The only reason
     I can think of for using this with link is to provide a different stylesheet.

     The recommendation is that JavaScript should be used using progressive
     enhancement instead. Most of the scripting techniques in WCAG 2.0 gently prod
     the reader towards progressive enhancement instead of techniques such as
     noscript.

     Example:

        <html>
            <head>
                <noscript>
                    <link rel="start" href="start.html" />
                </noscript>
            </head>
            <body>
            </body>
        </html>
