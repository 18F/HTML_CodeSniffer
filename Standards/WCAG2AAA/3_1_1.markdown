---
title: Success Criterion 3.1.1: Language of Page
layout: default
---

# Success Criterion 3.1.1: Language of Page

- **Applies to**: <abbr title="Single A">A</abbr>, <abbr title="Double A">AA</abbr>, <abbr title="Triple A">AAA</abbr>.

## Definition

The default human language of each Web page can be programmatically determined.

The full ["understanding" page for Success Criterion 3.1.1](http://www.w3.org/TR/UNDERSTANDING-WCAG20/meaning-doc-lang-id.html) is available from the W3C.

### Advisory techniques

Technique [H57](#tech-h57), below, is the only supported sufficient technique for HTML documents. [Using the Content-Language header in HTTP][SVR5] is considered an advisory technique, and may apply for document types other than HTML - however, since conformance is only defined at a web page level, server techniques alone may not be sufficient.

[SVR5]: http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/SVR5 "Server technique SVR5"

## Techniques tested

### Table of contents

- [H57: Using language attributes on the html element](#tech-h57)

### <a id="tech-h57">H57: Using language attributes on the html element</a>

Simply defines the overall human language of the page. The effective language attribute is different depending on whether the page is rendered as HTML or as XHTML: in HTML, the attribute is called "lang"; in XHTML the attribute is "xml:lang", as per the XML specification (and the latter is mandatory for XHTML).

The ability to test for the correct attribute - based on document type - is hampered by two factors:

- On IE, there is no ability to specifically access the doctype through javascript - through document.doctype - except in IE9 Standards Mode;
- The mess that is serving XHTML 1.0 as the content type text/html (instead of serving as application/xhtml+xml), and what it would actually be parsed as by a browser DOM (which we have to use).

Therefore, our automated testing can be limited to the following:

- That at least one of "lang" or "xml:lang" is used. (That the correct one(s) exist is up to the tester as a manual check.)
- If both are specified, that they don't conflict with each other (they must be the same when compared case-insensitively).
- That they conform to the correct format for language tags (eg. "en"; "en-AU").

In the case of HTML 5, a W3C Editor's Draft exists referring to a concept called ["Polyglot Markup"][HTML5 Polyglot], which is a method of ensuring that XHTML 5 documents can work properly when interpreted as HTML-serialised documents - which is intended to happen with an XHTML document is sent with the content type text/html. This specifies using both lang and xml:lang with identical, which are accepted as benign elements in either serialisation (HTML or XHTML), as long as they are equal (case-insensitive). XHTML 1.0 also states that both are acceptable in its [HTML Compatibility Guidelines appendix][XHTML 1.0 C]. However, HTML 4 markup is not valid when xml:lang exists.

  [HTML5 Polyglot]: http://www.w3.org/TR/html-polyglot/ "Polyglot Markup: HTML-Compatible XHTML Documents"
  [XHTML 1.0 C]: http://www.w3.org/TR/xhtml1/guidelines.html "XHTML 1.0 (Second Edition) - Appendix C: HTML Compatibility Guidelines"

#### Testing

> 1. Examine the html element of the document.
> 2. Check that the html element has a lang and/or xml:lang attribute.
> 3. Check that the value of the lang attribute conforms to [<acronym title="Best Current Practice">BCP</acronym> 47: Tags for the Identification of Languages or its successor][BCP47] and reflects the primary language used by the Web page.

Note: <acronym title="Best Current Practice">BCP</acronym> 47, as published by the <acronym title="Internet Engineering Task Force">IETF</acronym>, is a concatenation of two <acronym title="Request For Comments">RFC</acronym> documents: [#5646][RFC5646] ("Tags for Identifying Languages") and [#4647][RFC4647] ("Matching of Language Tags").

[BCP47]: http://www.rfc-editor.org/rfc/bcp/bcp47.txt "Best Current Practice 47"
[RFC5646]: http://www.rfc-editor.org/rfc/rfc5646.txt "RFC 5646"
[RFC4647]: http://www.rfc-editor.org/rfc/rfc4647.txt "RFC 4647"

#### Examples

##### Error example 1

    <html>
    </html>

Error due to no languages specified at all.

##### Warning Example 2

    <html lang="en-AU">
    </html>

This is correct in HTML 4.01 and HTML 5 (and acceptable but not recommended with XHTML 1.0). It is a manual failure in XHTML 1.1 (which no-one uses anyway). It is acceptable in the HTML 5 working draft when parsed as XHTML, because usually it will be parsed as HTML because of being sent by a server as content type text/html.

A warning should probably be generated here, notifying that the best practice is to provide both attributes where they are accepted.

##### Warning Example 3

    <html xml:lang="en-AU">
    </html>

This is correct in XHTML 5 and 1.1, probably should be treated as a warning in XHTML 1.0, and as a manual failure in HTML (since the declaration has no effect). Overall, this should be emitted as a warning, with the best practice to provide both attributes where they are accepted.

Why it should be treated as a warning in XHTML 1.0 is that because it is sent with content type text/html, some browsers may treat as HTML and therefore use "lang" instead of "xml:lang". Both should be provided for maximum compatibility.

(This is currently considered a failure in the latest HTML 5 working draft: since there is no XML namespace, this is an attribute with literal name "xml:lang" - and different to what it is in XHTML. It is only permitted if a "lang" tag is also provided, and the two are the same, compared case-insensitively.)

##### Success example 4

    <html lang="en-AU" xml:lang="en-AU">
    </html>

Best practice usage of the lang and xml:lang attributes. This is invalid in HTML 4, but valid in XHTML 1.0 and (X)HTML 5.

##### Warning example 5

    <html lang="en-AU" xml:lang="en-au">
    </html>

This is as valid as example 4 is (since the comparison is case-insensitive), but it may be worth throwing a warning or notice here because the two should probably match case-sensitively for readability purposes.

##### Error example 6

    <html lang="en-AU" xml:lang="en-GB">
    </html>

Error due to the two attributes being different. Conflicting attributes is invalid (X)HTML 5, and in any case provides for ambiguous selection of language that depends on how the document is actually interpreted (as XHTML or plain HTML).

##### Error example 7

    <html lang="" xml:lang="">
    </html>

Error due to a blank language tag.

##### Error example 8

    <html lang="english" xml:lang="english">
    </html>

Error due to an invalid language tag. Language codes, as defined in [<acronym title="Request For Comments">RFC</acronym> 5646][RFC5646], start with a language code
of two or three (occasionally one) characters.

> It is technically possible for 5-to-8 character tags to exist but the registration process is discouraged (as they should go through ISO 639 and get a three-character language code), and as of August 2011 none of these exist.

##### Error example 9

    <html lang="en-" xml:lang="en-">
    </html>

Error due to an invalid language tag - namely the inappropriate use of a separator at the end of the tag, suggesting a missing subcode.
